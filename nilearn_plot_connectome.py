# -*- coding: utf-8 -*-
"""Nilearn.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Gd3bXqE34jh7w6qzGzR3wmV8a5ORHOzL
"""

# Drawing the DAN

!pip install nilearn

# Import required libraries
import numpy as np
from nilearn import plotting

# Define MNI coordinates and labels
coordinates = [
    (10, -62, 61),   # Precuneus
    (-52, -63, 5),   # Middle Temporal Gyrus
    (22, -65, 48),   # Precuneus
    (46, -59, 4),    # Middle Temporal Gyrus
    (25, -58, 60),   # Superior Parietal Lobule
    (-33, -46, 47),  # Sub-Gyral
    (-27, -71, 37),  # Precuneus
    (-32, -1, 54),   # Middle Frontal Gyrus
    (-42, -60, -9),  # Sub-Gyral
    (-17, -59, 64),  # Superior Parietal Lobule
    (29, -5, 54)     # Middle Frontal Gyrus
]

# Create a connectivity matrix with zeros (no actual edges)
connectivity_matrix = np.zeros((len(coordinates), len(coordinates)))

# Plot the coordinates on a glass brain using plot_connectome
plotting.plot_connectome(connectivity_matrix, coordinates, node_color='red', node_size=50, display_mode='lyrz', title='Dorsal Attention Network')

# Show the plot
plotting.show()

# Install necessary packages
!pip install nilearn pandas matplotlib

# Import required libraries
import pandas as pd
import numpy as np
from nilearn import plotting

# Load the Power atlas data
data = [
    [-7, -52, 61, 'Precuneus', 'Sensory/somatomotor Hand'],
    [-14, -18, 40, 'Cingulate Gyrus', 'Sensory/somatomotor Hand'],
    [0, -15, 47, 'Paracentral Lobule', 'Sensory/somatomotor Hand'],
    [10, -2, 45, 'Cingulate Gyrus', 'Sensory/somatomotor Hand'],
    [-7, -21, 65, 'Medial Frontal Gyrus', 'Sensory/somatomotor Hand'],
    [-7, -33, 72, 'Postcentral Gyrus', 'Sensory/somatomotor Hand'],
    [13, -33, 75, 'Postcentral Gyrus', 'Sensory/somatomotor Hand'],
    [-54, -23, 43, 'Postcentral Gyrus', 'Sensory/somatomotor Hand'],
    [29, -17, 71, 'Precentral Gyrus', 'Sensory/somatomotor Hand'],
    [10, -46, 73, 'Postcentral Gyrus', 'Sensory/somatomotor Hand'],
    [-23, -30, 72, 'Postcentral Gyrus', 'Sensory/somatomotor Hand'],
    [-40, -19, 54, 'Postcentral Gyrus', 'Sensory/somatomotor Hand'],
    [29, -39, 59, 'Postcentral Gyrus', 'Sensory/somatomotor Hand'],
    [50, -20, 42, 'Postcentral Gyrus', 'Sensory/somatomotor Hand'],
    [-38, -27, 69, 'undefined', 'Sensory/somatomotor Hand'],
    [20, -29, 60, 'Precentral Gyrus', 'Sensory/somatomotor Hand'],
    [44, -8, 57, 'Precentral Gyrus', 'Sensory/somatomotor Hand'],
    [-29, -43, 61, 'Postcentral Gyrus', 'Sensory/somatomotor Hand'],
    [10, -17, 74, 'Superior Frontal Gyrus', 'Sensory/somatomotor Hand'],
    [22, -42, 69, 'Postcentral Gyrus', 'Sensory/somatomotor Hand'],
    [-45, -32, 47, 'Inferior Parietal Lobule', 'Sensory/somatomotor Hand'],
    [-21, -31, 61, 'Postcentral Gyrus', 'Sensory/somatomotor Hand'],
    [-13, -17, 75, 'Precentral Gyrus', 'Sensory/somatomotor Hand'],
    [42, -20, 55, 'Postcentral Gyrus', 'Sensory/somatomotor Hand'],
    [-38, -15, 69, 'undefined', 'Sensory/somatomotor Hand'],
    [-16, -46, 73, 'Postcentral Gyrus', 'Sensory/somatomotor Hand'],
    [2, -28, 60, 'Medial Frontal Gyrus', 'Sensory/somatomotor Hand'],
    [3, -17, 58, 'Medial Frontal Gyrus', 'Sensory/somatomotor Hand'],
    [38, -17, 45, 'Precentral Gyrus', 'Sensory/somatomotor Hand'],
    [47, -30, 49, 'Postcentral Gyrus', 'Sensory/somatomotor Hand'],
    [-49, -11, 35, 'Precentral Gyrus', 'Sensory/somatomotor Mouth'],
    [36, -9, 14, 'Insula', 'Sensory/somatomotor Mouth'],
    [51, -6, 32, 'Precentral Gyrus', 'Sensory/somatomotor Mouth'],
    [-53, -10, 24, 'Precentral Gyrus', 'Sensory/somatomotor Mouth'],
    [66, -8, 25, 'Precentral Gyrus', 'Sensory/somatomotor Mouth'],
    [-3, 2, 53, 'Medial Frontal Gyrus', 'Cingulo-opercular Task Control'],
    [54, -28, 34, 'Inferior Parietal Lobule', 'Cingulo-opercular Task Control'],
    [19, -8, 64, 'Middle Frontal Gyrus', 'Cingulo-opercular Task Control'],
    [-16, -5, 71, 'Superior Frontal Gyrus', 'Cingulo-opercular Task Control'],
    [-10, -2, 42, 'Cingulate Gyrus', 'Cingulo-opercular Task Control'],
    [37, 1, -4, 'Insula', 'Cingulo-opercular Task Control'],
    [13, -1, 70, 'Superior Frontal Gyrus', 'Cingulo-opercular Task Control'],
    [7, 8, 51, 'Medial Frontal Gyrus', 'Cingulo-opercular Task Control'],
    [-45, 0, 9, 'Precentral Gyrus', 'Cingulo-opercular Task Control'],
    [49, 8, -1, 'Superior Temporal Gyrus', 'Cingulo-opercular Task Control'],
    [-34, 3, 4, 'Claustrum', 'Cingulo-opercular Task Control'],
    [-51, 8, -2, 'Superior Temporal Gyrus', 'Cingulo-opercular Task Control'],
    [-5, 18, 34, 'Cingulate Gyrus', 'Cingulo-opercular Task Control'],
    [36, 10, 1, 'Insula', 'Cingulo-opercular Task Control'],
    [32, -26, 13, 'Insula', 'Auditory'],
    [65, -33, 20, 'Superior Temporal Gyrus', 'Auditory'],
    [58, -16, 7, 'Superior Temporal Gyrus', 'Auditory'],
    [-38, -33, 17, 'Insula', 'Auditory'],
    [-60, -25, 14, 'Superior Temporal Gyrus', 'Auditory'],
    [-49, -26, 5, 'Superior Temporal Gyrus', 'Auditory'],
    [43, -23, 20, 'Insula', 'Auditory'],
    [-50, -34, 26, 'Inferior Parietal Lobule', 'Auditory'],
    [-53, -22, 23, 'Postcentral Gyrus', 'Auditory'],
    [-55, -9, 12, 'Precentral Gyrus', 'Auditory'],
    [56, -5, 13, 'Precentral Gyrus', 'Auditory'],
    [59, -17, 29, 'Postcentral Gyrus', 'Auditory'],
    [-30, -27, 12, 'Insula', 'Auditory'],
    [-41, -75, 26, 'Middle Temporal Gyrus', 'Default mode'],
    [6, 67, -4, 'undefined', 'Default mode'],
    [8, 48, -15, 'Medial Frontal Gyrus', 'Default mode'],
    [-13, -40, 1, 'Parahippocampa Gyrus', 'Default mode'],
    [-18, 63, -9, 'Superior Frontal Gyrus', 'Default mode'],
    [-46, -61, 21, 'Middle Temporal Gyrus', 'Default mode'],
    [43, -72, 28, 'Middle Temporal Gyrus', 'Default mode'],
    [-44, 12, -34, 'Superior Temporal Gyrus', 'Default mode'],
    [46, 16, -30, 'Superior Temporal Gyrus', 'Default mode'],
    [-68, -23, -16, 'undefined', 'Default mode'],
    [-44, -65, 35, 'Angular Gyrus', 'Default mode'],
    [-39, -75, 44, 'undefined', 'Default mode'],
    [-7, -55, 27, 'Cingulate Gyrus', 'Default mode'],
    [6, -59, 35, 'Precuneus', 'Default mode'],
    [-11, -56, 16, 'Posterior Cingulate', 'Default mode'],
    [-3, -49, 13, 'Posterior Cingulate', 'Default mode'],
    [8, -48, 31, 'Cingulate Gyrus', 'Default mode'],
    [15, -63, 26, 'Precuneus', 'Default mode'],
    [-2, -37, 44, 'Cingulate Gyrus', 'Default mode'],
    [11, -54, 17, 'Posterior Cingulate', 'Default mode'],
    [52, -59, 36, 'Angular Gyrus', 'Default mode'],
    [23, 33, 48, 'Middle Frontal Gyrus', 'Default mode'],
    [-10, 39, 52, 'Superior Frontal Gyrus', 'Default mode'],
    [-16, 29, 53, 'Superior Frontal Gyrus', 'Default mode'],
    [-35, 20, 51, 'Middle Frontal Gyrus', 'Default mode'],
    [22, 39, 39, 'Superior Frontal Gyrus', 'Default mode'],
    [13, 55, 38, 'Superior Frontal Gyrus', 'Default mode'],
    [-10, 55, 39, 'Superior Frontal Gyrus', 'Default mode'],
    [-20, 45, 39, 'Superior Frontal Gyrus', 'Default mode'],
    [6, 54, 16, 'Medial Frontal Gyrus', 'Default mode'],
    [6, 64, 22, 'Medial Frontal Gyrus', 'Default mode'],
    [-7, 51, -1, 'Medial Frontal Gyrus', 'Default mode'],
    [9, 54, 3, 'Medial Frontal Gyrus', 'Default mode'],
    [-3, 44, -9, 'Medial Frontal Gyrus', 'Default mode'],
    [8, 42, -5, 'Medial Frontal Gyrus', 'Default mode'],
    [-11, 45, 8, 'Medial Frontal Gyrus', 'Default mode'],
    [-2, 38, 36, 'Medial Frontal Gyrus', 'Default mode'],
    [-3, 42, 16, 'Anterior Cingulate', 'Default mode'],
    [-20, 64, 19, 'Superior Frontal Gyrus', 'Default mode'],
    [-8, 48, 23, 'Medial Frontal Gyrus', 'Default mode'],
    [65, -12, -19, 'Inferior Temporal Gyrus', 'Default mode'],
    [-56, -13, -10, 'Middle Temporal Gyrus', 'Default mode'],
    [-58, -30, -4, 'Middle Temporal Gyrus', 'Default mode'],
    [65, -31, -9, 'Middle Temporal Gyrus', 'Default mode'],
    [-68, -41, -5, 'Middle Temporal Gyrus', 'Default mode'],
    [13, 30, 59, 'Superior Frontal Gyrus', 'Default mode'],
    [12, 36, 20, 'Anterior Cingulate', 'Default mode'],
    [52, -2, -16, 'Middle Temporal Gyrus', 'Default mode'],
    [-26, -40, -8, 'Parahippocampa Gyrus', 'Default mode'],
    [27, -37, -13, 'Parahippocampa Gyrus', 'Default mode'],
    [-34, -38, -16, 'Fusiform Gyrus', 'Default mode'],
    [28, -77, -32, 'Uvula', 'Default mode'],
    [52, 7, -30, 'Middle Temporal Gyrus', 'Default mode'],
    [-53, 3, -27, 'Middle Temporal Gyrus', 'Default mode'],
    [47, -50, 29, 'Supramarginal Gyrus', 'Default mode'],
    [-49, -42, 1, 'Middle Temporal Gyrus', 'Default mode'],
    [-46, 31, -13, 'Inferior Frontal Gyrus', 'Default mode'],
    [49, 35, -12, 'Inferior Frontal Gyrus', 'Default mode'],
    [-2, -35, 31, 'Cingulate Gyrus', 'Memory retrieval?'],
    [-7, -71, 42, 'Precuneus', 'Memory retrieval?'],
    [11, -66, 42, 'Precuneus', 'Memory retrieval?'],
    [4, -48, 51, 'Precuneus', 'Memory retrieval?'],
    [2, -24, 30, 'Cingulate Gyrus', 'Memory retrieval?'],
    [18, -47, -10, 'Parahippocampa Gyrus', 'Visual'],
    [40, -72, 14, 'Middle Temporal Gyrus', 'Visual'],
    [8, -72, 11, 'Cuneus', 'Visual'],
    [-8, -81, 7, 'Cuneus', 'Visual'],
    [-28, -79, 19, 'Sub-Gyral', 'Visual'],
    [20, -66, 2, 'Lingual Gyrus', 'Visual'],
    [-24, -91, 19, 'Cuneus', 'Visual'],
    [27, -59, -9, 'Lingual Gyrus', 'Visual'],
    [-15, -72, -8, 'Lingual Gyrus', 'Visual'],
    [-18, -68, 5, 'Cuneus', 'Visual'],
    [43, -78, -12, 'Inferior Occipital Gyrus', 'Visual'],
    [-47, -76, -10, 'Middle Occipital Gyrus', 'Visual'],
    [-14, -91, 31, 'Cuneus', 'Visual'],
    [15, -87, 37, 'Precuneus', 'Visual'],
    [29, -77, 25, 'Sub-Gyral', 'Visual'],
    [20, -86, -2, 'Lingual Gyrus', 'Visual'],
    [15, -77, 31, 'Cuneus', 'Visual'],
    [-16, -52, -1, 'Lingual Gyrus', 'Visual'],
    [42, -66, -8, 'Middle Occipital Gyrus', 'Visual'],
    [24, -87, 24, 'Cuneus', 'Visual'],
    [6, -72, 24, 'Precuneus', 'Visual'],
    [-42, -74, 0, 'Middle Occipital Gyrus', 'Visual'],
    [26, -79, -16, 'Lingual Gyrus', 'Visual'],
    [-16, -77, 34, 'Precuneus', 'Visual'],
    [-3, -81, 21, 'Cuneus', 'Visual'],
    [-40, -88, -6, 'Inferior Occipital Gyrus', 'Visual'],
    [37, -84, 13, 'Middle Occipital Gyrus', 'Visual'],
    [6, -81, 6, 'Cuneus', 'Visual'],
    [-26, -90, 3, 'Middle Occipital Gyrus', 'Visual'],
    [-33, -79, -13, 'Middle Occipital Gyrus', 'Visual'],
    [37, -81, 1, 'Middle Occipital Gyrus', 'Visual'],
    [-44, 2, 46, 'Middle Frontal Gyrus', 'Fronto-parietal Task Control'],
    [48, 25, 27, 'Middle Frontal Gyrus', 'Fronto-parietal Task Control'],
    [-47, 11, 23, 'Inferior Frontal Gyrus', 'Fronto-parietal Task Control'],
    [-53, -49, 43, 'Inferior Parietal Lobule', 'Fronto-parietal Task Control'],
    [-23, 11, 64, 'Superior Frontal Gyrus', 'Fronto-parietal Task Control'],
    [58, -53, -14, 'Middle Temporal Gyrus', 'Fronto-parietal Task Control'],
    [24, 45, -15, 'Superior Frontal Gyrus', 'Fronto-parietal Task Control'],
    [34, 54, -13, 'Middle Frontal Gyrus', 'Fronto-parietal Task Control'],
    [47, 10, 33, 'Middle Frontal Gyrus', 'Fronto-parietal Task Control'],
    [-41, 6, 33, 'Inferior Frontal Gyrus', 'Fronto-parietal Task Control'],
    [-42, 38, 21, 'Middle Frontal Gyrus', 'Fronto-parietal Task Control'],
    [38, 43, 15, 'Middle Frontal Gyrus', 'Fronto-parietal Task Control'],
    [49, -42, 45, 'Inferior Parietal Lobule', 'Fronto-parietal Task Control'],
    [-28, -58, 48, 'Superior Parietal Lobule', 'Fronto-parietal Task Control'],
    [44, -53, 47, 'Inferior Parietal Lobule', 'Fronto-parietal Task Control'],
    [32, 14, 56, 'Superior Frontal Gyrus', 'Fronto-parietal Task Control'],
    [37, -65, 40, 'Inferior Parietal Lobule', 'Fronto-parietal Task Control'],
    [-42, -55, 45, 'Inferior Parietal Lobule', 'Fronto-parietal Task Control'],
    [40, 18, 40, 'Middle Frontal Gyrus', 'Fronto-parietal Task Control'],
    [-34, 55, 4, 'Middle Frontal Gyrus', 'Fronto-parietal Task Control'],
    [-42, 45, -2, 'Middle Frontal Gyrus', 'Fronto-parietal Task Control'],
    [33, -53, 44, 'Inferior Parietal Lobule', 'Fronto-parietal Task Control'],
    [43, 49, -2, 'Middle Frontal Gyrus', 'Fronto-parietal Task Control'],
    [-42, 25, 30, 'Middle Frontal Gyrus', 'Fronto-parietal Task Control'],
    [-3, 26, 44, 'Medial Frontal Gyrus', 'Fronto-parietal Task Control'],
    [11, -39, 50, 'Paracentral Lobule', 'Salience'],
    [55, -45, 37, 'Supramarginal Gyrus', 'Salience'],
    [42, 0, 47, 'Middle Frontal Gyrus', 'Salience'],
    [31, 33, 26, 'Sub-Gyral', 'Salience'],
    [48, 22, 10, 'Inferior Frontal Gyrus', 'Salience'],
    [-35, 20, 0, 'Extra-Nuclear', 'Salience'],
    [36, 22, 3, 'Insula', 'Salience'],
    [37, 32, -2, 'Inferior Frontal Gyrus', 'Salience'],
    [34, 16, -8, 'Extra-Nuclear', 'Salience'],
    [-11, 26, 25, 'Anterior Cingulate', 'Salience'],
    [-1, 15, 44, 'Cingulate Gyrus', 'Salience'],
    [-28, 52, 21, 'Middle Frontal Gyrus', 'Salience'],
    [0, 30, 27, 'undefined', 'Salience'],
    [5, 23, 37, 'Cingulate Gyrus', 'Salience'],
    [10, 22, 27, 'Anterior Cingulate', 'Salience'],
    [31, 56, 14, 'Middle Frontal Gyrus', 'Salience'],
    [26, 50, 27, 'Superior Frontal Gyrus', 'Salience'],
    [-39, 51, 17, 'Superior Frontal Gyrus', 'Salience'],
    [6, -24, 0, 'Extra-Nuclear', 'Subcortical'],
    [-2, -13, 12, 'Extra-Nuclear', 'Subcortical'],
    [-10, -18, 7, 'Thalamus', 'Subcortical'],
    [12, -17, 8, 'Thalamus', 'Subcortical'],
    [-5, -28, -4, 'undefined', 'Subcortical'],
    [-22, 7, -5, 'Lentiform Nucleus', 'Subcortical'],
    [-15, 4, 8, 'Lentiform Nucleus', 'Subcortical'],
    [31, -14, 2, 'Extra-Nuclear', 'Subcortical'],
    [23, 10, 1, 'Lentiform Nucleus', 'Subcortical'],
    [29, 1, 4, 'Extra-Nuclear', 'Subcortical'],
    [-31, -11, 0, 'Extra-Nuclear', 'Subcortical'],
    [15, 5, 7, 'Extra-Nuclear', 'Subcortical'],
    [9, -4, 6, 'Thalamus', 'Subcortical'],
    [-10, 11, 67, 'Superior Frontal Gyrus', 'Ventral attention'],
    [54, -43, 22, 'Inferior Parietal Lobule', 'Ventral attention'],
    [-56, -50, 10, 'Superior Temporal Gyrus', 'Ventral attention'],
    [-55, -40, 14, 'Superior Temporal Gyrus', 'Ventral attention'],
    [52, -33, 8, 'Superior Temporal Gyrus', 'Ventral attention'],
    [51, -29, -4, 'Middle Temporal Gyrus', 'Ventral attention'],
    [56, -46, 11, 'Superior Temporal Gyrus', 'Ventral attention'],
    [53, 33, 1, 'Inferior Frontal Gyrus', 'Ventral attention'],
    [-49, 25, -1, 'Inferior Frontal Gyrus', 'Ventral attention'],
    [10, -62, 61, 'Precuneus', 'Dorsal attention'],
    [-52, -63, 5, 'Middle Temporal Gyrus', 'Dorsal attention'],
    [22, -65, 48, 'Precuneus', 'Dorsal attention'],
    [46, -59, 4, 'Middle Temporal Gyrus', 'Dorsal attention'],
    [25, -58, 60, 'Superior Parietal Lobule', 'Dorsal attention'],
    [-33, -46, 47, 'Sub-Gyral', 'Dorsal attention'],
    [-27, -71, 37, 'Precuneus', 'Dorsal attention'],
    [-32, -1, 54, 'Middle Frontal Gyrus', 'Dorsal attention'],
    [-42, -60, -9, 'Sub-Gyral', 'Dorsal attention'],
    [-17, -59, 64, 'Superior Parietal Lobule', 'Dorsal attention'],
    [29, -5, 54, 'Middle Frontal Gyrus', 'Dorsal attention'],
    [-16, -65, -20, 'Declive', 'Cerebellar'],
    [-32, -55, -25, 'Culmen', 'Cerebellar'],
    [22, -58, -23, 'Declive', 'Cerebellar'],
    [1, -62, -18, 'Declive', 'Cerebellar'],
    [-25, -98, -12, 'Lingual Gyrus', 'Uncertain'],
    [27, -97, -13, 'Inferior Occipital Gyrus', 'Uncertain'],
    [24, 32, -18, 'Middle Frontal Gyrus', 'Uncertain'],
    [-56, -45, -24, 'Inferior Temporal Gyrus', 'Uncertain'],
    [8, 41, -24, 'Sub-Gyral', 'Uncertain'],
    [-21, -22, -20, 'Parahippocampa Gyrus', 'Uncertain'],
    [17, -28, -17, 'Culmen', 'Uncertain'],
    [-37, -29, -26, 'Parahippocampa Gyrus', 'Uncertain'],
    [65, -24, -19, 'undefined', 'Uncertain'],
    [52, -34, -27, 'Fusiform Gyrus', 'Uncertain'],
    [55, -31, -17, 'Middle Temporal Gyrus', 'Uncertain'],
    [34, 38, -12, 'Middle Frontal Gyrus', 'Uncertain'],
    [-58, -26, -15, 'Middle Temporal Gyrus', 'Uncertain'],
    [27, 16, -17, 'Inferior Frontal Gyrus', 'Uncertain'],
    [-31, 19, -19, 'Inferior Frontal Gyrus', 'Uncertain'],
    [8, -91, -7, 'Lingual Gyrus', 'Uncertain'],
    [17, -91, -14, 'Inferior Occipital Gyrus', 'Uncertain'],
    [-12, -95, -13, 'Lingual Gyrus', 'Uncertain'],
    [-21, 41, -20, 'Superior Frontal Gyrus', 'Uncertain'],
    [-18, -76, -24, 'Declive', 'Uncertain'],
    [17, -80, -34, 'Uvula', 'Uncertain'],
    [35, -67, -34, 'Tuber', 'Uncertain'],
    [33, -12, -34, 'Uncus', 'Uncertain'],
    [-31, -10, -36, 'Uncus', 'Uncertain'],
    [49, -3, -38, 'Inferior Temporal Gyrus', 'Uncertain'],
    [-50, -7, -39, 'Inferior Temporal Gyrus', 'Uncertain'],
    [-47, -51, -21, 'Fusiform Gyrus', 'Uncertain'],
    [46, -47, -17, 'Fusiform Gyrus', 'Uncertain']
]

# Convert to a DataFrame for easier handling
df = pd.DataFrame(data, columns=['x', 'y', 'z', 'Region', 'Network'])

# Define coordinates and colors based on the network
coordinates = df[['x', 'y', 'z']].values
colors = ['red' if network == 'Dorsal attention' else 'blue' for network in df['Network']]

# Plot the coordinates
plotting.plot_glass_brain(None, display_mode='lyrz', plot_abs=False, colorbar=True, title='Power\'s Brain Atlas with Dorsal Attention Network (DAN) Nodes')
plotting.plot_connectome(np.zeros((len(coordinates), len(coordinates))), coordinates, node_color=colors, node_size=25, display_mode='lyrz')

# Show the plot
plotting.show()

#NOW LET'S DRAW THE RELEVANT CONNECTIONS BETWEEN THE DAN AND THE REST OF THE BRAIN
# Install necessary packages
!pip install nilearn pandas numpy matplotlib

# Import required libraries
import pandas as pd
import numpy as np
from nilearn import plotting
import matplotlib.pyplot as plt
from google.colab import files

# Convert to a DataFrame for easier handling
df = pd.DataFrame(data, columns=['x', 'y', 'z', 'Region', 'Network'])

significant_connections = [
    0, 4, 8, 16, 18, 30, 31, 39, 42, 52, 53, 61, 74, 88, 92, 106, 124, 169, 175, 176, 189, 204, 227, 229, 239, 282, 336, 356, 514, 523, 863, 864, 874, 892, 895, 970, 990, 1120, 1148, 1156, 1174, 1193, 1254, 1270, 1273, 1276, 1308, 1335, 1336, 1337, 1347, 1349, 1360, 1365, 1388, 1412, 1438, 1465, 1466, 1486, 1493, 1496, 1535, 1538, 1540, 1542, 1638, 1688, 1689, 1696, 1697, 1760, 1784, 1798, 1824, 1925, 1940, 1951, 1952, 2070, 2087, 2128, 2177, 2180, 2183, 2200, 2258, 2288, 2298, 2326, 2329, 2352, 2360, 2384, 2436, 2438, 2444, 2447, 2459, 2464, 2476, 2481, 2488, 2507, 2522, 2525, 2547, 2551, 2554, 2615, 2620, 2704, 2711, 2721, 2873
]

# Create an empty connectivity matrix (11 x 264)
connectivity_matrix = np.zeros((11, 264))

# Fill the connectivity matrix with significant connections
for idx in significant_connections:
    row = idx // 264
    col = idx % 264
    connectivity_matrix[row, col] = 1

# Ensure the matrix is symmetric (11 x 264 to 264 x 264)
full_connectivity_matrix = np.zeros((264, 264))
for i in range(11):
    for j in range(264):
        if connectivity_matrix[i, j] == 1:
            full_connectivity_matrix[221 + i, j] = 1
            full_connectivity_matrix[j, 221 + i] = 1

# Define the node colors
dan_indices = list(range(221, 232 + 1))  # DAN node indices from 221 to 231 inclusive
connected_nodes = set(dan_indices)
for i in range(11):
    connections = np.nonzero(connectivity_matrix[i])[0]
    connected_nodes.update(connections)

# Create a mask to select only the relevant nodes
mask = np.zeros(264, dtype=bool)
mask[list(connected_nodes)] = True

# Filter the coordinates and the connectivity matrix
filtered_coordinates = np.array(coordinates)[mask]
filtered_connectivity_matrix = full_connectivity_matrix[np.ix_(mask, mask)]

# Define the filtered node colors
filtered_node_colors = ['red' if i in dan_indices else 'navy' for i in range(264) if mask[i]]

# Plot the connectome
plotting.plot_connectome(filtered_connectivity_matrix, filtered_coordinates, node_color=filtered_node_colors, node_size=20, edge_cmap='cyan_copper', edge_vmin=20, edge_vmax=21, title="DAN to Rest of Brain Connectome")
plt.savefig('/content/dan_to_rest_of_brain_connectome5.png', dpi=300)  # Save the figure in high resolution
plt.show()

# Download the file to your local computer
#files.download('/content/dan_to_rest_of_brain_connectome5.png')

# Extract the network labels for each region
networks = [entry[4] for entry in data]

# Initialize a dictionary to keep track of the connections
connections_count = {network: 0 for network in set(networks)}

# Count the connections for each network with the DAN
for i in range(11):  # Loop over the 11 DAN nodes
    for j in range(264):  # Loop over all 264 regions
        if connectivity_matrix[i, j] == 1:
            network = networks[j]
            connections_count[network] += 1

# Print the number of connections for each network
for network, count in connections_count.items():
    print(f"{network}: {count} connections with DAN")

# Extract the region labels for each area
regions = [entry[3] for entry in data]

# Initialize a dictionary to keep track of the connections
connections_count = {region: 0 for region in set(regions)}

# Count the connections for each region with the DAN
for i in range(11):  # Loop over the 11 DAN nodes
    for j in range(264):  # Loop over all 264 regions
        if connectivity_matrix[i, j] == 1:
            region = regions[j]
            connections_count[region] += 1

# Print the number of connections for each region
for region, count in connections_count.items():
    print(f"{region}: {count} connections with DAN")

# Initialize counters for the hemispheric connection categories
left_to_right = 0
right_to_left = 0
within_left = 0
within_right = 0

# Determine the hemisphere of each region based on the x-coordinate
hemisphere = ['left' if coord[0] < 0 else 'right' for coord in coordinates]

# Count the connections based on hemisphere categories
for i in range(11):  # Loop over the 11 DAN nodes
    for j in range(264):  # Loop over all 264 regions
        if connectivity_matrix[i, j] == 1:
            dan_hemisphere = hemisphere[221 + i]  # DAN node hemisphere
            target_hemisphere = hemisphere[j]  # Target region hemisphere

            if dan_hemisphere == 'left' and target_hemisphere == 'right':
                left_to_right += 1
            elif dan_hemisphere == 'right' and target_hemisphere == 'left':
                right_to_left += 1
            elif dan_hemisphere == 'left' and target_hemisphere == 'left':
                within_left += 1
            elif dan_hemisphere == 'right' and target_hemisphere == 'right':
                within_right += 1

# Print the counts of each connection type
print(f"Left (DAN) to Right (rest of the brain): {left_to_right}")
print(f"Right (DAN) to Left (rest of the brain): {right_to_left}")
print(f"Within Left Hemisphere: {within_left}")
print(f"Within Right Hemisphere: {within_right}")